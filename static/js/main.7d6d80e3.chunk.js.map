{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.component.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","monstersUsers","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAaeA,G,kBAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCSfC,EAbE,SAACR,GACd,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCKxBO,G,MAXG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCPG,E,kDAzCX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAgBVa,aAAe,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALF,E,gEAWE,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAa,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAO9C,IAAD,EAC2BC,KAAKN,MAA9Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YAEXU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC5CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGpD,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAce,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GArClBI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d6d80e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.styles.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=200x200`} alt=\"monster\"/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./CardList.styles.css\";\r\nimport Card from \"../card/Card\";\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <Card key={monster.id} monster={monster}/>\r\n\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\nimport \"./SearchBox.styles.css\";\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from \"react\";\nimport './App.css';\nimport CardList from \"./components/card-list/CardList.component\";\nimport SearchBox from \"./components/search-box/SearchBox\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            monsters: [],\n            searchField: \"\"\n        };\n\n        //this.handleChange = this.handleChange.bind(this);\n    };\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(monstersUsers => this.setState({monsters: monstersUsers}))\n    };\n\n    handleChange = (e) => {\n        this.setState({searchField: e.target.value})\n    };\n\n    render() {\n        const {monsters, searchField} = this.state;\n\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"Search monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}